apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId "pt.andreia.restaurantseeker"
        minSdkVersion min_sdk_version
        targetSdkVersion compile_sdk_version
        versionCode app_version_code
        versionName app_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation baseAndroidDependencies.kotlinLib
    implementation baseAndroidDependencies.ktx
    implementation baseAndroidDependencies.appCompat
    implementation baseAndroidDependencies.viewModel
    implementation baseAndroidDependencies.lifecycleExtensions
    implementation uiDependencies.material
    implementation uiDependencies.cardView
    implementation uiDependencies.recyclerView
    implementation uiDependencies.material
    testImplementation unitTesting.junit
    androidTestImplementation automationTesting.core
    androidTestImplementation automationTesting.junit
    androidTestImplementation automationTesting.espresso
    androidTestImplementation automationTesting.testRules

    // retrofit
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.gson
    implementation retrofitDependencies.interceptor

    //Kotlin Coroutines
    implementation coroutinesDependencies.core
    implementation coroutinesDependencies.android

    //Room database
    implementation roomDependencies.runtime
    kapt roomDependencies.compiler
    testImplementation roomDependencies.test

    //Room + coroutines
    implementation roomDependencies.coroutines

}